{"version":3,"sources":["components/Container/index.tsx","components/TextInput/index.tsx","components/Button/index.tsx","components/Input/index.tsx","components/Table/index.tsx","components/Table/TableHead/index.tsx","components/Table/HeadCell/index.tsx","components/Table/TableBody/index.tsx","components/Table/TableRow/index.tsx","components/Table/BodyCell/index.tsx","components/Tabs/index.tsx","components/Tabs/TabsTail/index.tsx","components/Tabs/TabsHead/index.tsx","hooks/useStoreSelector.ts","pages/common/Actions/RestoreButton/index.tsx","store/cities/actions.ts","pages/common/Actions/MoveUpButton/index.tsx","pages/common/Actions/utils/swapCitiesUp.ts","pages/common/Actions/MoveDownButton/index.tsx","pages/common/Actions/utils/swapCitiesDown.ts","pages/common/Actions/index.tsx","pages/common/Dialog/validate.ts","pages/common/Dialog/index.tsx","pages/common/Cities/index.tsx","pages/AllCities/index.tsx","pages/ActiveCities/index.tsx","pages/DeletedCities/index.tsx","api/castError.ts","widgets/SearchBar/index.tsx","api/fetchCityWeather.ts","consts/index.ts","widgets/AppHeader/index.tsx","widgets/AppContent/index.tsx","store/cities/utils/recalculatePositions.ts","store/cities/utils/changeCity.ts","store/cities/index.ts","store/rootReducer.ts","store/configureStore.ts","store/index.tsx","App.tsx","serviceWorker.ts","index.tsx"],"names":["c","block","Container","children","className","t","TextInput","name","props","useField","input","meta","touched","error","submitError","errorMessage","mix","b","Button","type","disabled","i","Input","id","Table","th","TableHead","hc","HeadCell","scope","TableBody","tr","TableRow","onClick","bc","BodyCell","Tabs","tt","TabsTail","TabsHead","useStoreSelector","path","useSelector","store","get","RestoreButton","dispatch","useDispatch","handleClick","useCallback","e","stopPropagation","payload","enableCity","MoveUpButton","group","tab","cities","index","findIndex","city","position","swapCitiesUp","MoveDownButton","length","swapCitiesDown","Actions","status","useState","visible","setVisible","handleOpen","handleClose","handleDelete","disableCity","onCancel","onOk","size","validate","values","errors","temperature","Dialog","onClose","initialValues","useMemo","main","temp","onSubmit","render","handleSubmit","title","readOnly","Cities","selectedCity","setSelectedCity","onRowClick","map","key","toFixed","AllCities","all","sortBy","ActiveCities","active","DeletedCities","deleted","castError","res","a","json","catch","ok","Error","message","sb","SearchBar","submitting","setSubmitting","value","setValue","setError","preventDefault","fetch","process","then","err","finally","handleChange","target","onKeyDown","onChange","placeholder","ah","AppHeader","ac","AppContent","exact","to","activeClassName","recalculatePositions","reduce","acc","changeCity","item","initialState","rootReducer","combineReducers","state","action","cityIndex","cityToDelete","cityToEnable","persistConfig","storage","stateReconciler","autoMergeLevel2","pReducer","persistReducer","configureStore","storeEnhancers","applyMiddleware","composedEnhancer","composeWithDevTools","createStore","persistor","persistStore","Store","loading","App","offsetTop","component","Boolean","window","location","hostname","match","ReactDOM","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","console"],"mappings":"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","file":"static/js/main.6eeb2c4b.chunk.js","sourcesContent":["import { block } from 'bem-cn'\nimport React from 'react'\nimport './styles.scss'\n\nconst c = block('container')\n\nconst Container: React.FC = ({ children }) => (\n  <div className={c()}>\n    {children}\n  </div>\n)\n\nexport default Container\n","import { block } from 'bem-cn'\nimport React from 'react'\nimport { useField } from 'react-final-form'\nimport './styles.scss'\n\ninterface IProps {\n  name: string\n  className?: string\n  placeholder?: string\n  disabled?: boolean\n  readOnly?: boolean\n}\n\nconst t = block('text-input')\n\nconst TextInput = ({ className = '', name, ...props }: IProps) => {\n  const { input, meta: { touched, error, submitError } } = useField(name)\n  const errorMessage = error || submitError\n  return (\n    <>\n      <input\n        {...input}\n        {...props}\n        name={name}\n        className={(t).mix(className)}\n      />\n      <div className={t('error')}>\n        {touched && errorMessage}\n      </div>\n    </>\n  )\n}\n\nexport default TextInput\n","import { block } from 'bem-cn'\nimport React from 'react'\nimport './styles.scss'\n\ninterface IProps {\n  type?: 'submit' | 'reset' | 'button'\n  className?: string\n  onClick?: (event: React.MouseEvent<HTMLButtonElement, MouseEvent>) => void\n  disabled?: boolean\n}\n\nconst b = block('button')\n\nconst Button: React.FC<IProps> = ({\n  type = 'button', className = '', children, disabled = false, ...props\n}) => (\n  <button\n    className={b({ disabled }).mix(className)}\n    type={type}\n    {...props}\n  >\n    {children}\n  </button>\n)\n\nexport default Button\n","import { block } from 'bem-cn'\nimport React from 'react'\nimport './styles.scss'\n\nexport interface IInputProps {\n  name: string\n  type?: string\n  value?: string\n  onChange?: (e: unknown) => void\n  onKeyDown?: (e: React.KeyboardEvent<HTMLInputElement>) => void\n  className?: string\n  placeholder?: string\n}\n\nconst i = block('custom-input')\n\nconst Input = ({\n  name,\n  type = 'text',\n  className = '',\n  ...props\n}: IInputProps) => (\n  <input\n    name={name}\n    id={name}\n    type={type}\n    {...props}\n    className={(i).mix(className)}\n  />\n)\n\nexport default Input\n","import { block } from 'bem-cn'\nimport React from 'react'\nimport './styles.scss'\n\ninterface IProps {\n  className?: string\n}\n\nconst t = block('custom-table')\n\nconst Table: React.FC<IProps> = ({ className = '', children }) => (\n  <table className={(t).mix(className)}>\n    {children}\n  </table>\n)\n\nexport default Table\n","import { block } from 'bem-cn'\nimport React from 'react'\nimport './styles.scss'\n\ninterface IProps {\n  className?: string\n}\n\nconst th = block('custom-table-head')\n\nconst TableHead: React.FC<IProps> = ({ className = '', children }) => (\n  <thead className={(th).mix(className)}>\n    <tr>\n      {children}\n    </tr>\n  </thead>\n)\n\nexport default TableHead\n","import { block } from 'bem-cn'\nimport React from 'react'\nimport './styles.scss'\n\ninterface IProps {\n  className?: string\n}\n\nconst hc = block('custom-table-head-cell')\n\nconst HeadCell: React.FC<IProps> = ({ className = '', children }) => (\n  <th className={(hc).mix(className)} scope='col'>\n    {children}\n  </th>\n)\n\nexport default HeadCell\n","import React from 'react'\n\ninterface IProps {\n  className?: string\n}\n\nconst TableBody: React.FC<IProps> = ({ className = '', children }) => (\n  <tbody className={className}>\n    {children}\n  </tbody>\n)\n\nexport default TableBody\n","import { block } from 'bem-cn'\nimport React from 'react'\nimport './styles.scss'\n\ninterface IProps {\n  className?: string\n  onClick?: () => void\n}\n\nconst tr = block('custom-table-row')\n\nconst TableRow: React.FC<IProps> = ({ className = '', onClick, children }) => (\n  <tr className={(tr).mix(className)} onClick={onClick}>\n    {children}\n  </tr>\n)\n\nexport default TableRow\n","import { block } from 'bem-cn'\nimport React from 'react'\nimport './styles.scss'\n\ninterface IProps {\n  className?: string\n}\n\nconst bc = block('custom-table-body-cell')\n\nconst BodyCell: React.FC<IProps> = ({ className = '', children }) => (\n  <td className={(bc).mix(className)}>\n    {children}\n  </td>\n)\n\nexport default BodyCell\n","import { block } from 'bem-cn'\nimport React from 'react'\nimport './styles.scss'\n\nconst th = block('custom-tabs')\n\nconst Tabs: React.FC = ({ children }) => (\n  <div className={th()}>\n    {children}\n  </div>\n)\n\nexport default Tabs\n","import { block } from 'bem-cn'\nimport React from 'react'\nimport './styles.scss'\n\nconst tt = block('tabs-tail')\n\nconst TabsTail = () => (\n  <div className={tt()} />\n)\n\nexport default TabsTail\n","import { block } from 'bem-cn'\nimport React from 'react'\nimport './styles.scss'\n\nconst th = block('custom-tabs-head')\n\nconst TabsHead: React.FC = ({ children }) => (\n  <div className={th()}>\n    {children}\n  </div>\n)\n\nexport default TabsHead\n","import get from 'lodash/get'\nimport { useSelector } from 'react-redux'\nimport { ICitiesStore } from 'store/cities'\n\ninterface IStore {\n  cities: ICitiesStore\n}\n\nconst useStoreSelector = <T>(path: string): T => useSelector((store: IStore) => get(store, path))\n\nexport default useStoreSelector\n","import { Button } from 'antd'\nimport React, { useCallback } from 'react'\nimport { useDispatch } from 'react-redux'\nimport { enableCity } from 'store/cities/actions'\n\ninterface IProps {\n  id: number,\n}\n\nconst RestoreButton = ({ id }: IProps) => {\n  const dispatch = useDispatch()\n\n  const handleClick = useCallback((e: React.MouseEvent) => {\n    e.stopPropagation()\n    dispatch(enableCity(id))\n  }, [id, dispatch])\n\n  return (\n    <Button onClick={handleClick}>\n      Восстановить\n    </Button>\n  )\n}\n\nexport default RestoreButton\n","import { Action } from 'redux'\n\nexport const ADD_CITY = 'ADD_CITY'\nexport const DISABLE_CITY = 'DISABLE_CITY'\nexport const ENABLE_CITY = 'ENABLE_CITY'\nexport const MOVE_UP = 'MOVE_UP'\nexport const MOVE_DOWN = 'MOVE_DOWN'\nexport const UPDATE_CITY = 'UPDATE_CITY'\n\nexport interface IAddCityAction extends Action {\n  type: string,\n  payload: IWeather\n}\n\nexport interface IToggleCityAction extends Action {\n  type: string,\n  payload: number\n}\n\ninterface IMoveCityPayload {\n  group: ICity[],\n  tab: 'all' | 'active' | 'deleted'\n}\n\nexport interface IMoveCityAction extends Action {\n  type: string,\n  payload: IMoveCityPayload\n}\n\nexport const addCity = (payload: IWeather) => ({\n  type: ADD_CITY,\n  payload,\n})\n\nexport const disableCity = (id: number) => ({\n  type: DISABLE_CITY,\n  payload: id,\n})\n\nexport const enableCity = (id: number) => ({\n  type: ENABLE_CITY,\n  payload: id,\n})\n\nexport const moveUp = (payload: IMoveCityPayload) => ({\n  type: MOVE_UP,\n  payload,\n})\n\nexport const moveDown = (payload: IMoveCityPayload) => ({\n  type: MOVE_DOWN,\n  payload,\n})\n\nexport const updateCity = (payload: ICity) => ({\n  type: UPDATE_CITY,\n  payload,\n})\n","import React, { useCallback } from 'react'\nimport { useDispatch } from 'react-redux'\nimport { Button } from 'antd'\nimport { moveUp } from 'store/cities/actions'\nimport swapCitiesUp from '../utils/swapCitiesUp'\n\ninterface IProps {\n  id: number\n  group: ICity[]\n  tab: 'all' | 'active' | 'deleted'\n}\n\nconst MoveUpButton = ({ id, group, tab }: IProps) => {\n  const dispatch = useDispatch()\n\n  const handleClick = useCallback((e: React.MouseEvent) => {\n    e.stopPropagation()\n    const cities = swapCitiesUp(group, id)\n    dispatch(moveUp({ group: cities, tab }))\n  }, [dispatch, group, id, tab])\n\n  return <Button onClick={handleClick}>Вверх</Button>\n}\n\nexport default MoveUpButton\n","export default function swapCitiesUp(cities: ICity[], id: number): ICity[] {\n  const index = cities.findIndex((city) => city.id === id)\n  if (index === -1 || index === 0) { return cities }\n  cities[index].position -= 1\n  cities[index - 1].position += 1\n  return cities\n}\n","import React, { useCallback } from 'react'\nimport { useDispatch } from 'react-redux'\nimport { Button } from 'antd'\nimport { moveDown } from 'store/cities/actions'\nimport swapCitiesDown from '../utils/swapCitiesDown'\n\ninterface IProps {\n  id: number\n  group: ICity[]\n  tab: 'all' | 'active' | 'deleted'\n}\n\nconst MoveDownButton = ({ id, group, tab }: IProps) => {\n  const dispatch = useDispatch()\n\n  const handleClick = useCallback((e: React.MouseEvent) => {\n    e.stopPropagation()\n    const cities = swapCitiesDown(group, id)\n    dispatch(moveDown({ group: cities, tab }))\n  }, [dispatch, group, id, tab])\n\n  return <Button onClick={handleClick}>Вниз</Button>\n}\n\nexport default MoveDownButton\n","export default function swapCitiesDown(cities: ICity[], id: number): ICity[] {\n  const index = cities.findIndex((city) => city.id === id)\n  if (index === -1 || index === cities.length - 1) { return cities }\n  cities[index].position += 1\n  cities[index + 1].position -= 1\n  return cities\n}\n","import React, { useCallback, useState } from 'react'\nimport { Button, Modal, Space } from 'antd'\nimport { useDispatch } from 'react-redux'\nimport { disableCity } from 'store/cities/actions'\nimport RestoreButton from './RestoreButton'\nimport MoveUpButton from './MoveUpButton'\nimport MoveDownButton from './MoveDownButton'\n\ninterface IProps {\n  id: number\n  status: 'active' | 'deleted'\n  city: string\n  group: ICity[]\n  tab: 'all' | 'active' | 'deleted'\n}\n\nconst Actions = ({ id, status, city, ...props }: IProps) => {\n  const dispatch = useDispatch()\n  const [visible, setVisible] = useState(false)\n\n  const handleOpen = useCallback((e: React.MouseEvent) => {\n    e.stopPropagation()\n    setVisible(true)\n  }, [])\n\n  const handleClose = useCallback((e: React.MouseEvent) => {\n    e.stopPropagation()\n    setVisible(false)\n  }, [])\n\n  const handleDelete = useCallback((e: React.MouseEvent) => {\n    e.stopPropagation()\n    dispatch(disableCity(id))\n    setVisible(false)\n  }, [id, dispatch])\n  return (\n    <>\n      <Modal visible={visible} onCancel={handleClose} onOk={handleDelete}>\n        {`Вы уверены, что хотите удалить город ${city} ?`}\n      </Modal>\n      <Space size='small'>\n        <MoveUpButton id={id} {...props} />\n        <MoveDownButton id={id} {...props} />\n        {status === 'active'\n          ? <Button onClick={handleOpen}>Удалить</Button>\n          : <RestoreButton id={id} />}\n      </Space>\n    </>\n  )\n}\nexport default Actions\n","interface IValues {\n  temperature: string\n}\n\ninterface IErrors {\n  temperature: string\n}\n\nexport default function validate(values: IValues): IErrors {\n  const errors = {} as IErrors\n  if (!values.temperature) { errors.temperature = 'Необходимо ввести значение' }\n  return errors\n}\n","import React, { useCallback, useMemo } from 'react'\nimport { useDispatch } from 'react-redux'\nimport { Modal } from 'antd'\nimport { Form } from 'react-final-form'\nimport { TextInput } from 'components'\nimport { updateCity } from 'store/cities/actions'\nimport validate from './validate'\n\ninterface IProps {\n  city: ICity | null\n  visible: boolean\n  onClose: () => void\n}\n\nconst Dialog = ({ city, visible, onClose }: IProps) => {\n  const dispatch = useDispatch()\n  const initialValues = useMemo(() => {\n    return { ...city, temperature: city?.main?.temp }\n  }, [city])\n\n  const onSubmit = useCallback((values) => {\n    values.main.temp = +values.temperature\n    delete values.temperature\n    dispatch(updateCity(values))\n    onClose()\n  }, [dispatch, onClose])\n\n  const handleClose = useCallback((e: React.MouseEvent) => {\n    e.stopPropagation()\n    onClose()\n  }, [onClose])\n\n  return (\n    <Form\n      initialValues={initialValues}\n      onSubmit={onSubmit}\n      validate={validate}\n      render={({ handleSubmit }) => (\n        <Modal\n          title='Изменить значения вручную'\n          visible={visible}\n          onOk={handleSubmit}\n          onCancel={handleClose}\n        >\n          <form onSubmit={handleSubmit}>\n            <TextInput\n              name='name'\n              readOnly\n            />\n            <TextInput\n              name='temperature'\n            />\n          </form>\n        </Modal>\n      )}\n    />\n  )\n}\n\nexport default Dialog\n","import { block } from 'bem-cn'\nimport React, { useState, useCallback } from 'react'\nimport { BodyCell, Table, TableHead, HeadCell, TableBody, TableRow } from 'components'\nimport Actions from '../Actions'\nimport Dialog from '../Dialog'\nimport './styles.scss'\n\ninterface IProps {\n  group: ICity[]\n  tab: 'all' | 'active' | 'deleted'\n}\n\nconst c = block('cities-table')\n\nconst Cities = ({ group, tab }: IProps) => {\n  const [visible, setVisible] = useState(false)\n  const [selectedCity, setSelectedCity] = useState<ICity | null>(null)\n\n  const onRowClick = useCallback((city: ICity) => {\n    setSelectedCity(city)\n    setVisible(true)\n  }, [])\n\n  const onClose = useCallback(() => {\n    setVisible(false)\n  }, [])\n  return (\n    <>\n    <Table>\n      <TableHead>\n        <HeadCell>Город</HeadCell>\n        <HeadCell>Температура</HeadCell>\n        <HeadCell>Действия</HeadCell>\n      </TableHead>\n      <TableBody>\n        {group.map((city) => (\n          <TableRow key={city.id} className={c('row')} onClick={() => onRowClick(city)}>\n            <BodyCell>\n              <span className={c('name', { disabled: city?.status === 'deleted' })}>\n                {city?.name}\n              </span>\n            </BodyCell>\n            <BodyCell>\n              <span className={c('temperature', { disabled: city?.status === 'deleted' })}>\n                {city?.main?.temp.toFixed(0)}&deg;C\n              </span>\n            </BodyCell>\n            <BodyCell>\n              <Actions\n                id={city?.id}\n                status={city?.status}\n                city={city.name}\n                group={group}\n                tab={tab}\n              />\n            </BodyCell>\n          </TableRow>\n        ))}\n      </TableBody>\n    </Table>\n    <Dialog city={selectedCity} visible={visible} onClose={onClose} />\n    </>\n  )\n}\n\nexport default Cities\n","import React, { useMemo } from 'react'\nimport sortBy from 'lodash/sortBy'\nimport { useStoreSelector } from 'hooks'\nimport Cities from '../common/Cities'\n\nimport './styles.scss'\n\nconst AllCities = () => {\n  const all = useStoreSelector<ICity[]>('cities.all')\n  const group = useMemo(() => {\n    return sortBy(all, 'position')\n  }, [all])\n\n  return <Cities group={group} tab='all' />\n}\n\nexport default AllCities\n","import React, { useMemo } from 'react'\nimport sortBy from 'lodash/sortBy'\nimport { useStoreSelector } from 'hooks'\nimport Cities from '../common/Cities'\nimport './styles.scss'\n\nconst ActiveCities = () => {\n  const active = useStoreSelector<ICity[]>('cities.active')\n  const group = useMemo(() => {\n    return sortBy(active, 'position')\n  }, [active])\n\n  return <Cities group={group} tab='active' />\n}\n\nexport default ActiveCities\n","import React, { useMemo } from 'react'\nimport sortBy from 'lodash/sortBy'\nimport { useStoreSelector } from 'hooks'\nimport Cities from '../common/Cities'\nimport './styles.scss'\n\nconst DeletedCities = () => {\n  const deleted = useStoreSelector<ICity[]>('cities.deleted')\n  const group = useMemo(() => {\n    return sortBy(deleted, 'position')\n  }, [deleted])\n\n  return <Cities group={group} tab='deleted' />\n}\n\nexport default DeletedCities\n","export default async function castError(res: any): Promise<any> {\n  const json = await res.json().catch(() => null)\n\n  if (res.ok && json) { return json }\n\n  if (res.status >= 500) {\n    throw new Error(\n      'Что-то пошло не так. Попробуйте позже',\n    )\n  }\n\n  if (!res.ok && json) {\n    throw new Error(json.message)\n  }\n\n  return res\n}\n","import { block } from 'bem-cn'\nimport React, { useCallback, useState } from 'react'\nimport { useDispatch } from 'react-redux'\nimport { Button, Input } from 'components'\nimport fetchCityWeather from 'api/fetchCityWeather'\nimport { addCity } from 'store/cities/actions'\nimport './styles.scss'\n\nconst sb = block('search-bar')\n\nconst SearchBar = () => {\n  const dispatch = useDispatch()\n  const [submitting, setSubmitting] = useState(false)\n  const [value, setValue] = useState('')\n  const [error, setError] = useState('')\n\n  const handleSubmit = useCallback((e) => {\n    e.preventDefault()\n    if (!value) { return setError('Поле не может быть пустым') }\n    setSubmitting(true)\n    return fetchCityWeather(value)\n      .then((res) => dispatch(addCity(res)))\n      .catch((err) => typeof err === 'string' ? setError(err) : setError(err.message))\n      .finally(() => {\n        setSubmitting(false)\n        setValue('')\n      })\n  }, [value, dispatch])\n\n  const handleChange = useCallback((e) => {\n    if (error) { setError('') }\n    setValue(e.target.value)\n  }, [error])\n\n  const onKeyDown = useCallback((e: React.KeyboardEvent<HTMLInputElement>) => {\n    if (e.key === 'Enter') {\n      return handleSubmit(e)\n    }\n  }, [handleSubmit])\n\n  return (\n    <form onSubmit={handleSubmit}>\n      <div className={sb()}>\n        <Input\n          className={sb('input')}\n          name='search'\n          value={value}\n          onChange={handleChange}\n          placeholder='Введите название города'\n          onKeyDown={onKeyDown}\n        />\n        <Button className={sb('button')} type='submit' disabled={submitting}>\n          Искать\n        </Button>\n      </div>\n      {!!error && <div className={sb('error')}>{error}</div> }\n    </form>\n  )\n}\n\nexport default SearchBar\n","import { BASE_URL } from 'consts'\nimport castError from './castError'\n\nconst API_KEY = process.env.REACT_APP_WEATHER_API_KEY\n\nexport default function fetchCityWeather(name: string): Promise<IWeather> {\n  return fetch(`${BASE_URL}?q=${name}&appid=${API_KEY}&units=metric`)\n    .then(castError)\n}\n","export const BASE_URL = 'https://api.openweathermap.org/data/2.5/weather'\n","import { block } from 'bem-cn'\nimport React from 'react'\nimport SearchBar from 'widgets/SearchBar'\nimport './styles.scss'\n\nconst ah = block('application-header')\n\nconst AppHeader = () => (\n  <div className={ah()}>\n    <SearchBar />\n  </div>\n)\n\nexport default AppHeader\n","import { block } from 'bem-cn'\nimport React from 'react'\nimport { NavLink } from 'react-router-dom'\nimport { Tabs, TabsHead, TabsTail } from 'components'\nimport './styles.scss'\n\nconst ac = block('app-content')\n\nconst AppContent: React.FC = ({ children }) => {\n  return (\n    <>\n      <Tabs>\n        <TabsHead>\n          <NavLink exact to='/' className={ac('link')} activeClassName={ac('active-link')}>\n            Все\n          </NavLink>\n          <NavLink to='/active' className={ac('link')} activeClassName={ac('active-link')}>\n            Активные\n          </NavLink>\n          <NavLink to='/deleted' className={ac('link')} activeClassName={ac('active-link')}>\n            Удаленные\n          </NavLink>\n        </TabsHead>\n        <TabsTail />\n      </Tabs>\n      {children}\n    </>\n  )\n}\n\nexport default AppContent\n","export default function recalculatePositions(cities: ICity[], id: number): ICity[] {\n  return cities.reduce((acc, city, index) => (city.id === id\n    ? acc\n    : [...acc, { ...city, position: index + 1 }]), [] as ICity[])\n}\n","export default function changeCity(city: ICity, cities: ICity[]) {\n  return cities.map((item) => item.id === city.id ? ({ ...city, position: item.position }) : item)\n}\n","import { AnyAction } from 'redux'\nimport {\n  ADD_CITY,\n  ENABLE_CITY,\n  DISABLE_CITY,\n  MOVE_UP,\n  MOVE_DOWN,\n  UPDATE_CITY,\n  IAddCityAction,\n  IToggleCityAction,\n  IMoveCityAction,\n} from './actions'\nimport { changeCity, recalculatePositions } from './utils'\n\nexport interface ICitiesStore {\n  all: ICity[],\n  active: ICity[],\n  deleted: ICity[]\n}\n\nconst initialState = {\n  all: [] as ICity[],\n  active: [] as ICity[],\n  deleted: [] as ICity[],\n}\n\nexport function reducer(state: ICitiesStore = initialState,\n  action: IAddCityAction | IToggleCityAction | IMoveCityAction | AnyAction) {\n  const { payload, type } = action\n  const { all, active, deleted } = state\n  switch (type) {\n    case ADD_CITY:\n    {\n      const cityIndex = all.findIndex((city) => city.id === payload?.id)\n      if (cityIndex !== -1) {\n        return {\n          ...state,\n          all: all.map((city) => (city.id === payload?.id\n            ? ({ ...payload, position: city.position, status: city.status })\n            : city)),\n          active: payload?.status === 'active' ? [...active, { ...payload, position: active.length + 1 }] : active,\n          deleted: payload?.status === 'deleted' ? [...deleted, { ...payload, position: deleted.length + 1 }] : deleted,\n        }\n      }\n      return {\n        ...state,\n        all: [...all, { ...payload, position: all.length + 1, status: 'active' }],\n        active: [...active, { ...payload, position: active.length + 1, status: 'active' }],\n      }\n    }\n    case DISABLE_CITY:\n      const cityToDelete = all.findIndex((city) => city.id === payload)\n      if (cityToDelete === -1) { return state }\n      return {\n        ...state,\n        all: all.map((city) => (city.id === payload ? ({ ...city, status: 'deleted' }) : city)),\n        active: recalculatePositions(active, payload),\n        deleted: [...deleted, { ...all[cityToDelete], status: 'deleted', position: deleted.length }],\n      }\n    case ENABLE_CITY:\n      const cityToEnable = all.findIndex((city) => city.id === payload)\n      if (cityToEnable === -1) { return state }\n      return {\n        ...state,\n        all: all.map((city) => city.id === payload ? ({ ...city, status: 'active' }) : city),\n        active: [...active, { ...all[cityToEnable], status: 'active', position: active.length }],\n        deleted: recalculatePositions(deleted, payload),\n      }\n    case MOVE_UP:\n    case MOVE_DOWN:\n      return {\n        ...state,\n        [payload.tab]: payload.group,\n      }\n    case UPDATE_CITY:\n      return {\n        ...state,\n        all: changeCity(payload, all),\n        active: changeCity(payload, active),\n        deleted: changeCity(payload, deleted),\n      }\n\n    default: return state\n  }\n}\n","import { combineReducers } from 'redux'\nimport { reducer as citiesReducer } from 'store/cities'\n\nconst rootReducer = combineReducers({\n  cities: citiesReducer,\n})\n\nexport default rootReducer\n","import { applyMiddleware, createStore } from 'redux'\nimport { composeWithDevTools } from 'redux-devtools-extension/developmentOnly'\nimport { persistReducer, persistStore } from 'redux-persist'\nimport autoMergeLevel2 from 'redux-persist/lib/stateReconciler/autoMergeLevel2'\nimport storage from 'redux-persist/lib/storage'\nimport rootReducer from './rootReducer'\n\nconst persistConfig = {\n  key: 'root',\n  storage,\n  stateReconciler: autoMergeLevel2,\n}\n\nconst pReducer = persistReducer(persistConfig, rootReducer)\n\nconst configureStore = () => {\n  const middlewares: any = []\n  const middlewareEnhancer = applyMiddleware(...middlewares)\n  const storeEnhancers = [middlewareEnhancer]\n  const composedEnhancer = composeWithDevTools(...storeEnhancers)\n\n  const store = createStore(\n    pReducer,\n    composedEnhancer,\n  )\n  const persistor = persistStore(store)\n\n  return { store, persistor }\n}\n\nexport default configureStore\n","import * as React from 'react'\nimport configureStore from 'store/configureStore'\nimport { PersistGate } from 'redux-persist/lib/integration/react'\nimport { Provider } from 'react-redux'\n\nconst { store, persistor } = configureStore()\n\nconst Store: React.FC = ({ children }) => (\n  <Provider store={store}>\n    <PersistGate loading={null} persistor={persistor}>\n      {children}\n    </PersistGate>\n  </Provider>\n)\nexport default Store\n\nexport { store }\n","import React from 'react'\nimport { BrowserRouter as Router, Switch, Route } from 'react-router-dom'\nimport { Affix, Layout } from 'antd'\nimport { Container } from 'components'\nimport { ActiveCities, AllCities, DeletedCities } from 'pages'\nimport AppHeader from 'widgets/AppHeader'\nimport AppContent from 'widgets/AppContent'\nimport Store from 'store'\n\nfunction App() {\n  return (\n    <Store>\n      <Container>\n        <Router>\n          <Layout>\n            <Affix offsetTop={0}>\n              <AppHeader />\n            </Affix>\n            <Switch>\n              <AppContent>\n                <Route exact path='/' component={AllCities} />\n                <Route exact path='/active' component={ActiveCities} />\n                <Route exact path='/deleted' component={DeletedCities} />\n              </AppContent>\n              <Route render={() => <div>404 Not Found</div>} />\n            </Switch>\n          </Layout>\n        </Router>\n      </Container>\n    </Store>\n  )\n}\n\nexport default App\n","/* eslint-disable */ \n// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost'\n    // [::1] is the IPv6 localhost address.\n    || window.location.hostname === '[::1]'\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    || window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/,\n    ),\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      process.env.PUBLIC_URL,\n      window.location.href,\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service '\n              + 'worker. To learn more, visit https://bit.ly/CRA-PWA',\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then((registration) => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all '\n                  + 'tabs for this page are closed. See https://bit.ly/CRA-PWA.',\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch((error) => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then((response) => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404\n        || (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then((registration) => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.',\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then((registration) => {\n        registration.unregister();\n      })\n      .catch((error) => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport 'antd/dist/antd.css'\nimport './index.css'\nimport App from './App'\nimport * as serviceWorker from './serviceWorker'\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister()\n"],"sourceRoot":""}